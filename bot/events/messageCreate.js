import { prefix } from '../config.js'
import { UserManager } from '../utils/userManager.js'
import { nameAll } from '../messages/name_all.js'
import { submit } from '../messages/submit.js'
import { rollFullName } from '../messages/roll_full_name.js'
import { MessageAttachment } from 'discord.js'
import { iiBotMessage } from '../messages/iiBot.js'
import { iiBotImage } from '../messages/iiBotImage.js'

const userManager = new UserManager()

// module.exports = (client, message,) => {
//     nameInputHandle(client, message);

// }

export const messageCreate = async (client, message) => {
    try {
        const id = message.author.id
        message.react('ü§î')
        if (message.author.bot || message.channel.type === 'dm') return

        if (message.content.startsWith(`${prefix}bot`)) {
            if (message.content.slice(5, 7) === '-c') {
                return message.reply(await iiBotMessage(message.content.slice(7), id, false))
            }
            return message.reply(await iiBotMessage(message.content.slice(4), id))
        }

        if (message.content.startsWith(`${prefix}image`)) {
            console.log(message.content.slice(6))
            return message.reply(await iiBotImage(message.content.slice(6)))
        }

        if (message.member.user.username === 'Steeeasy') {
            const attachment = new MessageAttachment('./bot/data/stass.jpeg')
            message.reply({ files: [attachment] })
        }
        if (message.member.user.username === '–í–∞—Å—è') {
            const attachment = new MessageAttachment('./bot/data/mops.jpeg')
            message.reply({ files: [attachment] })
        }

        if (!message.content.startsWith(prefix)) return

        rollFullName(message, userManager)
        if (message.content.startsWith(`${prefix}name_all`)) {
            if (message.member.user.username !== 'CyberSlug' && message.member.user.username !== 'VITOVT')
                return message.reply(`–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞ `)
            // isWorking = true
            // setTimeout(() => (isWorking = false), 30000)
            return nameAll(client, userManager)
        }
        submit(message)

        if (message.content.startsWith(`${prefix}get_name_list`)) {
            if (message.member.user.username !== 'CyberSlug') return message.reply(`No! ${':cowboy:'}`)
            const res = await userManager.getListNames()
            if (res === '') return message.reply('List error')
            message.reply(res)
        }

        if (message.content.startsWith(`${prefix}remove_name_list`)) {
            if (message.member.user.username !== 'CyberSlug') return message.reply(`No! ${':cowboy:'}`)
            await userManager.removeListNames()
            message.reply('List has been deleted')
        }

        if (message.content.startsWith(`${prefix}–¢—ã –±–æ—Ç`)) {
            message.reply(`   ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚†ü‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚†õ‚°õ‚†ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†õ‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†í‚†Ä‚†Ä‚†Ä‚†à‚†ë‚†Ç‚†à‚†ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†õ‚†∑‚†§‚£Ñ‚†à‚†õ‚†¶‚£Ä‚†Ä‚†ë‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†Ç‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†í‚†§‚£ò‚£Ø‚°ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†ì‚†¢‚¢§‚£Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†à‚†ì‚¢§‚°Ä‚†Ä‚†Ä‚†â‚†ê‚††‚¢Ä‚†Ä‚†Ä‚†à‚†ê‚†Ñ‚°Ä‚†à‚†¢‚°Ä‚†Ä‚†Ä‚†π‚£∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°∑‚°∂‚†§‚£Ñ‚°à‚†≥‚£§‚°Ä‚†Ä‚†ô‚†≤‚£Ñ‚°Ä‚†à‚†ì‚†§‚£Ä‚°Ä‚†Ä‚†Ä‚†ë‚†Ç‚†Ä‚†Ä‚†Ä‚¢Ä‚°ê‚†Ä‚£à‚£Å‚£†‚°Ä‚°ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†â‚†ª‚£∑‚£§‚°ô‚¢¶‚£§‚£ç‚£ì‚£¶‚£∞‚£∂‚°Ω‚£∑‚£∂‚°ü‚†õ‚†ø‚†ø‚†∂‚†ü‚†õ‚†õ‚†õ‚†õ‚†ã‚†â‚†â‚†ã‚†à‚†â‚†ô‚†õ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†â‚†õ‚¢¶‚£ô‚°Ñ‚†Ä‚†â‚†â‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  ‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚†è‚†Ä‚¢Ä‚°Ä‚†Ä‚£Ä‚£Ä‚†Ä‚†à‚†è‚†Ä‚†Ä‚†Ä‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  ‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚††‚†Ä‚†Ä‚¢π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  ‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚°Ä‚£¶‚£Ä‚£§‚£∂‚£í‚£∂‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚†Ä‚¢Ä‚£†‚°∂‚†õ‚†â‚†ª‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚†ô‚†ö‚†õ‚£¶‚†§‚°§‚†¨‚°ô‚†ì‚†¶‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚¢ø‚°â‚†Ä‚†í‚†¢‚°Ñ‚¢π‚°Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä ‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚†á‚†Ä‚†Ü‚†Ä‚£ª‚£õ‚£Ç‚£§‚†ú‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£è‚†≥‚£Ω‚£§‚°¥‚†¶‚°å‚°Ñ‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚†è‚†Ä‚°å‚†Ä‚†Ä‚†à‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°è‚†≥‚°Ñ‚¢∏‚°á‚†Ä‚¢Ä‚†á‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚°ü‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£¥‚°ã‚†π‚£ó‚°ô‚†ª‚°á‚†Ä‚†à‚£∞‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†§‚¢Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ú‚¢ø‚†Ä‚†π‚¢¶‚°Ä‚¢®‚°Å‚£á‚¢Ä‚£º‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£¶‚£§‚£§‚£∂‚£§‚£§‚°®‚†Ä‚¢∞‚†ñ‚†í‚¢§‚°Ä‚°º‚°á  ‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚°è‚†ò                ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚°á‚¢†‚°Ä‚¢®‚°ô‚†¶‚¢§‚£∏‚†ü‚°Ü‚¢†‚¢ª‚†É‚¢∑‚†Ä‚†Ä  ‚†Ä‚†Ä‚†Å‚†à   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£∑‚£¶‚£µ‚£Ñ‚†â‚°Ä‚†Ä‚†à‚¢ø‚†Å‚¢¥‚°æ‚†Ä‚†à‚¢ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä     ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£∑‚£ø‚£ø‚£ø‚£ø‚°ü‚†ö............................‚£†‚°¥‚†∂‚†õ‚†õ‚†õ‚†ª‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚°ü‚†â‚†Å‚†Ä‚£ø‚†â‚†Ñ‚¢ª‚°Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚°á‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£º‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚¢Ø‚†á‚†Ä‚†Ä‚†Ä‚£º‚†Ä‚†à‚¢∏‚£ß‚†Ä‚†Ä‚†Ä‚†à‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£Ä‚£Ä‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚°æ‚¢Ä‚†Ä‚†Ä‚¢†‚†è‚†Ä‚†Ä‚¢Ä‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†ü‚†Ä‚†Ä‚†Ä‚¢∞‚£è‚£Ω‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†ª‚£ø‚£Ä‚£Ä‚£Ä‚£Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£Ñ‚£∏‚£§‚£¥‚†ã‚†Ñ‚†Ä ‚†à‚°ª‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚†Å‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†õ‚†õ‚£∑‚£∑‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚°á‚†ô‚†ã‚†à‚£∑‚†Ä‚†Ä‚†Ä  ‚†Ä‚†Å‚¢π‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†á‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£∑‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚°Ä            ‚£¨‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ü‚†Ä‚†Ä‚¢∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£∂‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢π‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ñ‚£†‚£Ñ‚£Ä‚£Ä‚£†‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚£Ä‚£†‚£º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†õ‚†õ‚¢ª‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°ü‚†õ‚†õ‚†õ‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£º‚°á‚†Ä‚†Ä‚†Ä‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚£§‚£§‚£§‚£º‚£ø‚£ø‚£ø‚£ø‚£¶‚£§‚£§‚£§‚£§‚£§‚£§‚£ø‚£ø‚£∑‚£¶‚£§‚£§‚£§‚£§‚£§‚£∂‚£ø‚£ø‚£∑‚£§‚£§‚£§‚£ø
            ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø`)
        }
        if (message.content.startsWith(`${prefix}points`)) {
            if (message.member.user.username !== 'CyberSlug') return message.reply(`No! ${':cowboy:'}`)
            const [comm, id, amount] = message.content.split(' ')
            const user = await userManager.find(id)
            const fullname = await userManager.getFullName(user)
            userManager.changePoints(id, amount)
            message.reply(`${fullname} got ${amount} points.`)
        }
    } catch (err) {
        console.log(err)
    }
}
